{"ast":null,"code":"// import React from \"react\";\n// import \"./Chat.css\";\n// import Message from \"./components/Message\";\n// import io from \"socket.io-client\";\n// const socket = io.connect(\"http://localhost:3001\", {\n//   transports: [\"websocket\"],\n// });\n// function Chat() {\n//   const [name, setName] = React.useState(\"\");\n//   const [username, setUsername] = React.useState(\"Tanya\");\n//   const [message, setMessage] = React.useState(\"\");\n//   const [messages, setMessages] = React.useState([]);\n//   const [typeName, setTypeName] = React.useState([])\n//   const getUserName = (e) => setName(e.target.value);\n//   const changeUserName = () => {\n//     setUsername(name);\n//     setTypeName(name);\n//   }\n//   const getUserMessage = (e) => {\n//     setMessage(e.target.value);\n//     typeUser();\n//   }\n//   const sendUserMessage = () => {\n//     const msg = {\n//       message,\n//       username,\n//     };\n//     setMessages((messages) => [...messages, msg]);\n//     socket.emit(\"set-message\", msg);\n//   };\n//   const typeUser = () => {\n//     socket.emit(\"typing\", typeName);\n//   }\n//   /* const onTyping = useCallback(\n//       debounce(\n//         (user) => {\n//           clearTimeout(user.interval);\n//           if (!typingUsers.includes(user.userName)) {\n//             setTypingUsers([...typingUsers, user.userName]);\n//           }\n//           user.interval = setTimeout(() => {\n//             setTypingUsers(\n//               typingUsers.filter((typingUser) => typingUser !== user.userName)\n//             );\n//           }, 3000);\n//           console.log(typingUsers);\n//         },\n//         [typingUsers],\n//         2000,\n//         { leading: true }\n//       )\n//     ); */\n//   React.useEffect(() => {\n//     socket.on(\"get-message\", (msg) => {\n//       setMessages((messages) => [...messages, msg]);\n//     });\n//     socket.on(\"typing\", () => {\n//     })\n//   }, [messages,]);\n//   return (\n//     <div className=\"chat\">\n//       <header>\n//         <h1>Super Chat</h1>\n//       </header>\n//       <section>\n//         <div id=\"change_username\">\n//           <input\n//             id=\"username\"\n//             type=\"text\"\n//             name=\"message\"\n//             onChange={getUserName}\n//           />\n//           <button id=\"send_username\" type=\"button\" onClick={changeUserName}>\n//             Change username\n//           </button>\n//         </div>\n//       </section>\n//       <section id=\"chatroom\">\n//         {messages.map((item) => (\n//           <Message username={item.username} message={item.message} />\n//         ))}\n//       </section>\n//       <section>\n//       </section>\n//       <section id=\"input_zone\">\n//         <input\n//           id=\"message\"\n//           className=\"vertical-align\"\n//           type=\"text\"\n//           onChange={getUserMessage}\n//         />\n//         <button\n//           id=\"send_message\"\n//           className=\"vertical-align\"\n//           type=\"button\"\n//           onClick={sendUserMessage}\n//         >\n//           Send\n//         </button>\n//       </section>\n//     </div>\n//   );\n// }\n// export default Chat;","map":{"version":3,"sources":["/home/student/websocket/websockets/src/pages/Chat/Chat.jsx"],"names":[],"mappingssourcesContent":["// import React from \"react\";\n// import \"./Chat.css\";\n// import Message from \"./components/Message\";\n// import io from \"socket.io-client\";\n\n// const socket = io.connect(\"http://localhost:3001\", {\n//   transports: [\"websocket\"],\n// });\n\n// function Chat() {\n//   const [name, setName] = React.useState(\"\");\n//   const [username, setUsername] = React.useState(\"Tanya\");\n//   const [message, setMessage] = React.useState(\"\");\n//   const [messages, setMessages] = React.useState([]);\n//   const [typeName, setTypeName] = React.useState([])\n//   const getUserName = (e) => setName(e.target.value);\n//   const changeUserName = () => {\n//     setUsername(name);\n//     setTypeName(name);\n//   }\n//   const getUserMessage = (e) => {\n//     setMessage(e.target.value);\n//     typeUser();\n//   }\n\n//   const sendUserMessage = () => {\n//     const msg = {\n//       message,\n//       username,\n//     };\n\n//     setMessages((messages) => [...messages, msg]);\n//     socket.emit(\"set-message\", msg);\n//   };\n\n//   const typeUser = () => {\n//     socket.emit(\"typing\", typeName);\n//   }\n//   /* const onTyping = useCallback(\n//       debounce(\n//         (user) => {\n//           clearTimeout(user.interval);\n//           if (!typingUsers.includes(user.userName)) {\n//             setTypingUsers([...typingUsers, user.userName]);\n//           }\n//           user.interval = setTimeout(() => {\n//             setTypingUsers(\n//               typingUsers.filter((typingUser) => typingUser !== user.userName)\n//             );\n//           }, 3000);\n//           console.log(typingUsers);\n//         },\n//         [typingUsers],\n//         2000,\n//         { leading: true }\n//       )\n//     ); */\n//   React.useEffect(() => {\n//     socket.on(\"get-message\", (msg) => {\n//       setMessages((messages) => [...messages, msg]);\n//     });\n//     socket.on(\"typing\", () => {\n\n//     })\n//   }, [messages,]);\n\n\n\n//   return (\n//     <div className=\"chat\">\n//       <header>\n//         <h1>Super Chat</h1>\n//       </header>\n\n//       <section>\n//         <div id=\"change_username\">\n//           <input\n//             id=\"username\"\n//             type=\"text\"\n//             name=\"message\"\n//             onChange={getUserName}\n//           />\n//           <button id=\"send_username\" type=\"button\" onClick={changeUserName}>\n//             Change username\n//           </button>\n//         </div>\n//       </section>\n\n//       <section id=\"chatroom\">\n//         {messages.map((item) => (\n//           <Message username={item.username} message={item.message} />\n//         ))}\n//       </section>\n//       <section>\n\n//       </section>\n//       <section id=\"input_zone\">\n//         <input\n//           id=\"message\"\n//           className=\"vertical-align\"\n//           type=\"text\"\n//           onChange={getUserMessage}\n//         />\n//         <button\n//           id=\"send_message\"\n//           className=\"vertical-align\"\n//           type=\"button\"\n//           onClick={sendUserMessage}\n//         >\n//           Send\n//         </button>\n//       </section>\n//     </div>\n//   );\n// }\n\n// export default Chat;\n"]},"metadata":{},"sourceType":"module"}