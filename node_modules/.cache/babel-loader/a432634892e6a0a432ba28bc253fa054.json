{"ast":null,"code":"var _jsxFileName = \"/home/student/websocket/websockets/src/pages/Chat/Chat.jsx\";\nimport React from \"react\";\nimport \"./Chat.css\";\nimport Message from \"./components/Message\";\nimport io from \"socket.io-client\";\nconst socket = io.connect(\"http://localhost:3001\", {\n  transports: [\"websocket\"]\n});\n\nfunction Chat() {\n  const [name, setName] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"Tanya\");\n  const [message, setMessage] = React.useState(\"\");\n  const [messages, setMessages] = React.useState([]);\n  const [typeName, setTypeName] = React.useState([]);\n\n  const getUserName = e => setName(e.target.value);\n\n  const changeUserName = () => {\n    setUsername(name);\n    setTypeName(name);\n  };\n\n  const getUserMessage = e => setMessage(e.target.value);\n\n  handleTyping();\n  ;\n\n  const sendUserMessage = () => {\n    const msg = {\n      message,\n      username\n    };\n    setMessages(messages => [...messages, msg]);\n    socket.emit(\"set-message\", msg);\n  };\n\n  const typeUser = () => {\n    socket.emit(\"typing\", typeName);\n  };\n  /* const onTyping = useCallback(\n      debounce(\n        (user) => {\n          clearTimeout(user.interval);\n          if (!typingUsers.includes(user.userName)) {\n            setTypingUsers([...typingUsers, user.userName]);\n          }\n          user.interval = setTimeout(() => {\n            setTypingUsers(\n              typingUsers.filter((typingUser) => typingUser !== user.userName)\n            );\n          }, 3000);\n          console.log(typingUsers);\n        },\n        [typingUsers],\n        2000,\n        { leading: true }\n      )\n    ); */\n\n\n  React.useEffect(() => {\n    socket.on(\"get-message\", msg => {\n      setMessages(messages => [...messages, msg]);\n    });\n    socket.on(\"typing\", () => {});\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Super Chat\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"change_username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    name: \"message\",\n    onChange: getUserName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"send_username\",\n    type: \"button\",\n    onClick: changeUserName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Change username\"))), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"chatroom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, messages.map(item => /*#__PURE__*/React.createElement(Message, {\n    username: item.username,\n    message: item.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"input_zone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"message\",\n    className: \"vertical-align\",\n    type: \"text\",\n    onChange: getUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"send_message\",\n    className: \"vertical-align\",\n    type: \"button\",\n    onClick: sendUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/student/websocket/websockets/src/pages/Chat/Chat.jsx"],"names":["React","Message","io","socket","connect","transports","Chat","name","setName","useState","username","setUsername","message","setMessage","messages","setMessages","typeName","setTypeName","getUserName","e","target","value","changeUserName","getUserMessage","handleTyping","sendUserMessage","msg","emit","typeUser","useEffect","on","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Chat.css\";\nimport Message from \"./components/Message\";\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"http://localhost:3001\", {\n  transports: [\"websocket\"],\n});\n\nfunction Chat() {\n  const [name, setName] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"Tanya\");\n  const [message, setMessage] = React.useState(\"\");\n  const [messages, setMessages] = React.useState([]);\n  const [typeName, setTypeName] = React.useState([])\n  const getUserName = (e) => setName(e.target.value);\n  const changeUserName = () => {\n    setUsername(name); \n    setTypeName(name);\n  }\n  const getUserMessage = (e) => setMessage(e.target.value)\n  handleTyping();;\n\n  const sendUserMessage = () => {\n    const msg = {\n      message,\n      username,\n    };\n\n    setMessages((messages) => [...messages, msg]);\n    socket.emit(\"set-message\", msg);\n  };\n\n  const typeUser = ()=>{\n    socket.emit(\"typing\", typeName);\n  }\n/* const onTyping = useCallback(\n    debounce(\n      (user) => {\n        clearTimeout(user.interval);\n        if (!typingUsers.includes(user.userName)) {\n          setTypingUsers([...typingUsers, user.userName]);\n        }\n        user.interval = setTimeout(() => {\n          setTypingUsers(\n            typingUsers.filter((typingUser) => typingUser !== user.userName)\n          );\n        }, 3000);\n        console.log(typingUsers);\n      },\n      [typingUsers],\n      2000,\n      { leading: true }\n    )\n  ); */\n  React.useEffect(() => {\n    socket.on(\"get-message\", (msg) => {\n      setMessages((messages) => [...messages, msg]);\n    });\n    socket.on(\"typing\",()=>{\n\n    })\n  }, [messages,]);\n\n\n\n  return (\n    <div className=\"chat\">\n      <header>\n        <h1>Super Chat</h1>\n      </header>\n\n      <section>\n        <div id=\"change_username\">\n          <input\n            id=\"username\"\n            type=\"text\"\n            name=\"message\"\n            onChange={getUserName}\n          />\n          <button id=\"send_username\" type=\"button\" onClick={changeUserName}>\n            Change username\n          </button>\n        </div>\n      </section>\n\n      <section id=\"chatroom\">\n        {messages.map((item) => (\n          <Message username={item.username} message={item.message} />\n        ))}\n      </section>\n      <section>\n\n      </section>\n      <section id=\"input_zone\">\n        <input\n          id=\"message\"\n          className=\"vertical-align\"\n          type=\"text\"\n          onChange={getUserMessage}\n        />\n        <button\n          id=\"send_message\"\n          className=\"vertical-align\"\n          type=\"button\"\n          onClick={sendUserMessage}\n        >\n          Send\n        </button>\n      </section>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}